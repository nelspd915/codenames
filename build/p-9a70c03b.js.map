{"version":3,"sources":["src/extra/types.ts"],"names":["Color","Mode"],"mappings":"IAKYA,GAAZ,SAAYA,GACVA,EAAA,QAAA,OACAA,EAAA,OAAA,MACAA,EAAA,QAAA,OACAA,EAAA,SAAA,SAJF,CAAYA,IAAAA,EAAK,SAYLC,GAAZ,SAAYA,GACVA,EAAA,UAAA,SACAA,EAAA,aAAA,YACAA,EAAA,WAAA,WAHF,CAAYA,IAAAA,EAAI","sourcesContent":["import { Socket } from \"socket.io\";\n\n/**\n * Enumerator for possible cell colors.\n */\nexport enum Color {\n  Blue = \"blue\",\n  Red = \"red\",\n  Gray = \"gray\",\n  Black = \"black\"\n}\n\nexport type Team = Extract<Color, Color.Blue | Color.Red>;\n\n/**\n * Possible display modes for a cell.\n */\nexport enum Mode {\n  Normal = \"normal\",\n  Spymaster = \"spymaster\",\n  Endgame = \"endgame\"\n}\n\n/**\n * Array of cell data.\n */\nexport type BoardData = CellData[];\n\n/**\n * Data to apply to a cell.\n */\nexport interface CellData {\n  word: string,\n  color?: Color,\n  mode?: Mode,\n  revealed?: boolean\n}\n\n/**\n * Data to apply to a player.\n */\nexport interface PlayerData {\n  socket: Socket,\n  username?: string,\n  mode?: Mode,\n  team?: Team\n}\n\n/**\n * Team scores.\n */\nexport type Scores = {\n  [key in Color]: number;\n};\n\n/**\n * Game data.\n */\nexport interface GameData {\n  board: BoardData,\n  scores: Scores\n}"]}