{"file":"types-02046d2b.js","mappings":"AAAA;;;IAGY;AAAZ,WAAY,SAAS;EACnB,0BAAa,CAAA;EACb,wBAAW,CAAA;EACX,0BAAa,CAAA;EACb,4BAAe,CAAA;AACjB,CAAC,EALW,SAAS,KAAT,SAAS,QAKpB;AAED;;;IAGY;AAAZ,WAAY,QAAQ;EAClB,6BAAiB,CAAA;EACjB,mCAAuB,CAAA;EACvB,+BAAmB,CAAA;AACrB,CAAC,EAJW,QAAQ,KAAR,QAAQ;;;;","names":[],"sources":["./src/extra/types.ts"],"sourcesContent":["/**\r\n * Enumerator for possible cell colors.\r\n */\r\nexport enum CellColor {\r\n  Blue = \"blue\",\r\n  Red = \"red\",\r\n  Gray = \"gray\",\r\n  Black = \"black\"\r\n}\r\n\r\n/**\r\n * Possible display modes for a cell.\r\n */\r\nexport enum CellMode {\r\n  Normal = \"normal\",\r\n  Spymaster = \"spymaster\",\r\n  Endgame = \"endgame\"\r\n}\r\n\r\n/**\r\n * Array of cell data.\r\n */\r\nexport type BoardData = CellData[];\r\n\r\n/**\r\n * Data to apply to a cell.\r\n */\r\nexport interface CellData {\r\n  word: string,\r\n  color?: CellColor,\r\n  mode?: CellMode,\r\n  revealed?: boolean\r\n}"],"version":3}