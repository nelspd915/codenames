{"version":3,"sources":["../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/index.mjs","../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/url.js","../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","src/components/codenames-app/codenames-app.scss?tag=codenames-app&encapsulation=shadow","src/components/codenames-app/codenames-app.tsx","src/components/codenames-board/codenames-board.scss?tag=codenames-board&encapsulation=shadow","src/components/codenames-board/codenames-board.tsx","src/components/codenames-cell/codenames-cell.scss?tag=codenames-cell&encapsulation=shadow","src/components/codenames-cell/codenames-cell.tsx","src/components/codenames-spinner/codenames-spinner.scss?tag=codenames-spinner&encapsulation=shadow","src/components/codenames-spinner/codenames-spinner.tsx"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decode","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","join","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","Error","[object Object]","reason","description","context","super","Transport","writable","query","readyState","socket","doOpen","doClose","onClose","write","onPacket","details","alphabet","seed","prev","encode","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","name","poll","onPause","pause","total","doPoll","onOpen","close","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","path","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","async","undefined","xscheme","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","then","WebSocket","MozWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","substr","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","PacketType","Encoder","replacer","EVENT","ACK","BINARY_EVENT","BINARY_ACK","encodeAsBinary","encodeAsString","nsp","stringify","deconstruction","unshift","Decoder","reviver","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","subDestroy","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subs","onpacket","active","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","sameNamespace","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","listener","sent","emitBuffered","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","codenamesAppCss","CodenamesApp","cellIndex","detail","boardData","h","Host","codenamesBoardCss","CodenamesBoard","_b","map","cellData","word","color","mode","revealed","codenamesCellCss","CodenamesCell","hostRef","CellColor","Gray","CellMode","Normal","showSpinner","handleRevealCell","revealCell","class","onClick","toUpperCase","codenamesSpinnerCss","CodenamesSpinner"],"mappings":"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","sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n",":host {\n  display: block;\n}\n\ncodenames-board {\n  width: 800px;\n}","import { Component, Host, h, Listen, State } from '@stencil/core';\nimport { BoardData } from \"../../extra/types\";\nimport { io, Socket } from \"socket.io-client\";\n\n@Component({\n  tag: 'codenames-app',\n  styleUrl: 'codenames-app.scss',\n  shadow: true,\n})\nexport class CodenamesApp {\n\n  @Listen(\"revealCell\")\n  revealCellHandler(event: CustomEvent<number>): void {\n    const cellIndex = event.detail;\n    this.socket.emit(\"revealCell\", cellIndex);\n  }\n\n  /**\n   * Board data passed to codenames-board used to generate cells.\n   */\n  @State() private boardData: BoardData;\n\n  /**\n   * Socket connection with the server.\n   */\n  private socket: Socket;\n\n  /**\n   * Stencil lifecycle method `connectedCallback` for `codenames-app` component.\n   */\n  async connectedCallback(): Promise<void> {\n    this.socket = io(\"http://localhost:8000\");\n    this.socket.on(\"updateBoard\", (boardData: BoardData) => {\n      this.boardData = boardData;\n    });\n  }\n\n  /**\n   * Stencil lifecycle method `render` for `codenames-app` component.\n   */\n  render(): void {\n    return (\n      <Host>\n        <codenames-board boardData={this.boardData}></codenames-board>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: flex;\n  margin: 50px;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  height: 600px;\n}\n","import { Component, Host, h, Prop } from '@stencil/core';\nimport { BoardData } from \"../../extra/types\";\n\n@Component({\n  tag: 'codenames-board',\n  styleUrl: 'codenames-board.scss',\n  shadow: true,\n})\nexport class CodenamesBoard {\n\n  /**\n   * Board data used to generate the cells.\n   */\n  @Prop() boardData?: BoardData;\n\n  /**\n   * Stencil lifecycle method `render` for `codenames-board` component.\n   */\n  render(): void {\n    return (\n      <Host>\n        {this.boardData?.map((cellData, i) => {\n          return (\n            <codenames-cell\n              index={i}\n              word={cellData.word}\n              color={cellData.color}\n              mode={cellData.mode}\n              revealed={cellData.revealed}\n            ></codenames-cell>\n          )\n        }) ?? null}\n      </Host>\n    );\n  }\n\n}\n",":host {\n  width: 18%;\n  height: 17%;\n}\n\ndiv {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  font-family: Roboto, verdana, sans-serif;\n  font-size: 15pt;\n  background: #e8e8e8;\n  cursor: pointer;\n  &.revealed, &.spymaster, &.endgame {\n    cursor: default;\n  }\n}\n\n.blue {\n  &.spymaster {\n    color: #4183cc;\n    font-weight: bold;\n  }\n\n  &.revealed {\n    background: #4183cc;\n    color: #ffffff;\n  }\n\n  &.endgame {\n    background: #a6c7ee;\n  }\n}\n\n.red {\n  &.spymaster {\n    color: #d13030;\n    font-weight: bold;\n  }\n\n  &.revealed {\n    background: #d13030;\n    color: #ffffff;\n  }\n\n  &.endgame {\n    background: #ecabab;\n  }\n}\n\n.gray {\n  &.spymaster {\n    color: #000000;\n    font-weight: bold;\n  }\n\n  &.revealed {\n    background: #8e8e8e;\n    color: #ffffff;\n  }\n}\n\n.black {\n  &.spymaster {\n    background: #999999;\n    outline: 5px solid #000000;\n    font-weight: bold;\n  }\n\n  &.revealed, &.endgame {\n    background: #000000;\n    color: #ffffff;\n    outline: 0;\n  }\n}\n","import { Component, Prop, h, State, Event, EventEmitter } from \"@stencil/core\";\nimport { CellColor, CellMode } from \"../../extra/types\";\n\n@Component({\n  tag: \"codenames-cell\",\n  styleUrl: \"codenames-cell.scss\",\n  shadow: true,\n})\nexport class CodenamesCell {\n  /**\n   * Index of the cell.\n   */\n  @Prop() index: number;\n\n  /**\n   * Word shown in cell.\n   */\n  @Prop() word: string = \"\";\n\n  /**\n   * Cell color.\n   */\n  @Prop() color?: CellColor = CellColor.Gray;\n\n  /**\n   * Cell display mode.\n   */\n  @Prop() mode?: CellMode = CellMode.Normal;\n\n  /**\n   * Whether the cell is revealed.\n   */\n  @Prop() revealed?: boolean = false;\n\n  /**\n   * Whether to show loading spinner.\n   */\n  @State() private showSpinner: boolean = false;\n\n  /**\n   * Event fired upon clicking a cell to reveal it.\n   */\n  @Event({ bubbles: true }) revealCell: EventEmitter<number>;\n\n  /**\n   * Stencil lifecycle method `render` for `codenames-cell` component.\n   */\n  render(): void {\n    this.showSpinner = false;\n    return (\n      <div\n        class={`${this.color} ${this.mode} ${this.revealed ? \"revealed\" : \"\"}`}\n        onClick={this.handleRevealCell}\n      >\n        {this.showSpinner ?\n          <codenames-spinner></codenames-spinner> :\n          <span>{this.word.toUpperCase()}</span>\n        }\n      </div>\n    );\n  }\n\n  /**\n   * Sends request to reveal this cell on the board.\n   */\n  private handleRevealCell = async (): Promise<void> => {\n    if (this.mode === CellMode.Normal && this.revealed === false) {\n      this.showSpinner = true;\n      this.revealCell.emit(this.index)\n    }\n  }\n}\n",":host {\n  display: block;\n}\n\n.lds-dual-ring:after {\n  content: \" \";\n  display: block;\n  width: 32px;\n  height: 32px;\n  margin: 4px;\n  border-radius: 50%;\n  border: 4px solid #000;\n  border-color: #000 transparent #000 transparent;\n  animation: lds-dual-ring 1.2s linear infinite;\n}\n\n@keyframes lds-dual-ring {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Host, h } from '@stencil/core';\n\n@Component({\n  tag: 'codenames-spinner',\n  styleUrl: 'codenames-spinner.scss',\n  shadow: true,\n})\nexport class CodenamesSpinner {\n\n  render() {\n    return (\n      <Host>\n        <div class=\"lds-dual-ring\"></div>\n      </Host>\n    );\n  }\n\n}\n"]}